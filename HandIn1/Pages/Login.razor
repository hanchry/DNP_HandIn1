@page "/login"
@namespace LoginComponent
@using HandIn1.Authentication

@inject AuthenticationStateProvider AuthenticationStateProvider
@inject NavigationManager NavigationManager
<h2>Login</h2>
<AuthorizeView>
    <NotAuthorized>
        <div class="form-group">
            <label>User name:</label>
            <input type="text" placeholder="user name" @bind-value="username"/>
        </div>
        <div class="form-group">
            <label>Password</label>
            <input type="password" placeholder="password" @bind-value="password"/>
        </div>
        <div style="color:red">@errorMessage</div>

        <button href="" @onclick="PerformLogin">
            Sign in
        </button>
        <button href="" @onclick="NavigateToRegister">
            Sign up
        </button>
    </NotAuthorized>
</AuthorizeView>

@code {
    private string username;
    private string password;
    private string errorMessage;
    
    
    
    public async Task PerformLogin()
    {
        errorMessage = "";
        try
        {
            ((CustomAuthenticationStateProvider) AuthenticationStateProvider).ValidateLogin(username, password);
            username = "";
            password = "";
            NavigationManager.NavigateTo("/");
        }
        catch (Exception e)
        {
            errorMessage = e.Message;
        }
    }

    public async Task PerformLogout()
    {
        errorMessage = "";
        username = "";
        password = "";
        try
        {
            ((CustomAuthenticationStateProvider) AuthenticationStateProvider).Logout();
            NavigationManager.NavigateTo("/");
        }
        catch (Exception e)
        {
        }
    }

    public void NavigateToRegister()
    {
        NavigationManager.NavigateTo("/register");
    }
    
}